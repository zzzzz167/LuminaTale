name: benchmark

on:
  workflow_dispatch:
    inputs:
      bench:
        description: 'Which benchmark to run'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - parse_bench
          - executor_bench

  push:
    branches: [ main ]
    paths:
      - 'viviscript-core/src/**'
      - 'viviscript-core/benches/**'
      - 'viviscript-core/Cargo.toml'
      - 'lumina-core/src/**'
      - 'lumina-core/benches/**'
      - 'lumina-core/Cargo.toml'

permissions:
  contents: write

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      viviscript: ${{ steps.changes.outputs.viviscript }}
      lumina:     ${{ steps.changes.outputs.lumina }}
    steps:
      - uses: actions/checkout@v4

      - name: Detect which crates changed
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            viviscript:
              - 'viviscript-core/src/**'
              - 'viviscript-core/benches/**'
              - 'viviscript-core/Cargo.toml'
            lumina:
              - 'lumina-core/src/**'
              - 'lumina-core/benches/**'
              - 'lumina-core/Cargo.toml'

  bench:
    needs: detect-changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Cache benchmark baseline
        uses: actions/cache@v4
        with:
          path: ./target/criterion
          key: criterion-baseline-${{ runner.os }}-${{ github.run_number }}
          restore-keys: |
            criterion-baseline-${{ runner.os }}-

      - name: Run parse_bench
        if: >
          (github.event_name == 'workflow_dispatch' &&
           contains(fromJSON('["all","parse_bench"]'), inputs.bench)) ||
          (github.event_name == 'push' &&
           needs.detect-changes.outputs.viviscript == 'true')
        run: cargo bench --bench parse_bench

      - name: Run executor_bench
        if: >
          (github.event_name == 'workflow_dispatch' &&
           contains(fromJSON('["all","executor_bench"]'), inputs.bench)) ||
          (github.event_name == 'push' &&
           needs.detect-changes.outputs.lumina == 'true')
        run: cargo bench --bench executor_bench

      - name: Deploy Criterion report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/criterion/
          destination_dir: criterion
          keep_files: true